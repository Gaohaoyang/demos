{"version":3,"file":"static/js/570.2c925d8d.chunk.js","mappings":"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","sources":["PartyPopper/Component/Parallelogram.ts","PartyPopper/Component/motionLogic.ts","PartyPopper/Component/index.tsx","PartyPopper/index.tsx"],"sourcesContent":["// 平行四边形\n/* eslint-disable no-param-reassign */\nclass Parallelogram {\n  x: number\n\n  y: number\n\n  radius: number | undefined\n\n  vx: number\n\n  vy: number\n\n  color: string\n\n  rotation: number\n\n  scaleX: number\n\n  scaleY: number\n\n  boundary: number\n\n  constructor(color: string) {\n    this.x = 0\n    this.y = 0\n    this.boundary = 12\n    this.vx = 0\n    this.vy = 0\n    this.color = color\n    this.rotation = 0\n    this.scaleX = 1\n    this.scaleY = 1\n  }\n\n  /**\n   * draw\n   */\n  public draw(context: CanvasRenderingContext2D) {\n    context.save()\n    context.translate(this.x, this.y)\n    context.rotate(this.rotation)\n    context.scale(this.scaleX, this.scaleY)\n\n    context.fillStyle = this.color\n    context.beginPath()\n\n    context.moveTo(-6, -2.5)\n    context.lineTo(6, -2.5)\n    context.lineTo(10, 2.5)\n    context.lineTo(-2, 2.5)\n    context.lineTo(-6, -2.5)\n\n    context.closePath()\n    context.fill()\n    context.restore()\n  }\n}\n\nexport default Parallelogram\n","import Parallelogram from './Parallelogram'\n\ninterface IMotionLogicOptions {\n  elementsNum: number\n  colors: string[]\n  canvas: HTMLCanvasElement\n}\n\nconst maxSpeedV0X = 80\nconst maxSpeedV0Y = 380\nconst gravity = 160 // 重力加速度， 单位 像素/s^2\nlet elements: Parallelogram[] = []\nconst initMaxAngle = 360 // 初始最大角度\nconst maxAngleSpeed = 580 // 最大角速度\n\n/**\n * 动画逻辑\n */\nconst motionLogic = (ctx: CanvasRenderingContext2D, options: IMotionLogicOptions) => {\n  const { elementsNum, colors, canvas } = options\n\n  let then = 0\n  let start = false\n\n  const initElements = () => {\n    elements = []\n    for (let i = 0; i < elementsNum; i += 1) {\n      const element = new Parallelogram(colors[i % colors.length])\n      element.x = canvas.width / 2\n      element.y = canvas.height / 2\n      element.vx = (Math.random() * 2 - 1) * maxSpeedV0X\n      element.vy = -Math.random() * maxSpeedV0Y\n      element.rotation = ((Math.random() * 2 - 1) * initMaxAngle * Math.PI) / 180\n      elements.push(element)\n    }\n  }\n\n  const drawFrame = (time: number) => {\n    const timeInSeconds = time / 1000 // 将毫秒转为秒单位\n    const deltaTime = timeInSeconds - then\n    then = timeInSeconds\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n    for (let i = elements.length - 1; i > -1; i -= 1) {\n      elements[i].vy += gravity * deltaTime\n      elements[i].x += elements[i].vx * deltaTime\n      elements[i].y += elements[i].vy * deltaTime\n\n      if (elements[i].rotation > 0) {\n        elements[i].rotation += (Math.random() * maxAngleSpeed * deltaTime * Math.PI) / 180\n      } else {\n        elements[i].rotation += (Math.random() * -maxAngleSpeed * deltaTime * Math.PI) / 180\n      }\n      elements[i].draw(ctx)\n\n      if (\n        elements[i].x - elements[i].boundary > canvas.width\n        || elements[i].x + elements[i].boundary < 0\n        || elements[i].y - elements[i].boundary > canvas.height\n      ) {\n        if (start) {\n          elements[i].x = canvas.width / 2\n          elements[i].y = canvas.height / 2\n          elements[i].vx = (Math.random() * 2 - 1) * maxSpeedV0X\n          elements[i].vy = -Math.random() * maxSpeedV0Y\n        } else {\n          elements.splice(i, 1)\n          if (elements.length === 0) {\n            return\n          }\n        }\n      }\n    }\n    window.requestAnimationFrame(drawFrame)\n  }\n\n  document.addEventListener('partyPopperStart', (e: any) => {\n    if (e.detail) {\n      start = true\n      initElements()\n      drawFrame(0)\n    } else {\n      start = false\n    }\n  })\n}\n\nexport default motionLogic\n","/* eslint-disable no-param-reassign */\nimport React, { CSSProperties, useEffect, useRef } from 'react'\nimport motionLogic from './motionLogic'\n\ninterface IPartyPopper {\n  /**\n   * 元素数量\n   * 默认为 80，建议低端手机设置为 30\n   * */\n  elementsNum?: number\n\n  /**\n   * 元素颜色，默认为 ['#709EFF', '#FFFF4E', '#FFA74C', '#FF5485']\n   */\n  colors?: string[]\n\n  /** 样式（容器样式） */\n  // style?: CSSProperties\n\n  /** 是否开始动画 */\n  start?: boolean\n}\n\nconst defaultStyle: CSSProperties = {\n  width: '100vw',\n  height: '100vh',\n  position: 'absolute',\n  top: '0',\n  left: '0',\n  pointerEvents: 'none',\n}\n\n/**\n * 设置 Canvas 尺寸\n */\nconst setCanvasSize = (canvas: HTMLCanvasElement, wrap: HTMLDivElement) => {\n  const wrapRect = wrap.getBoundingClientRect()\n  canvas.width = wrapRect.width\n  canvas.height = wrapRect.height\n}\n\n/**\n * 撒花\n */\nfunction PartyPopper(props: IPartyPopper) {\n  const {\n    elementsNum = 80,\n    colors = ['#709EFF', '#FFFF4E', '#FFA74C', '#FF5485'],\n    start = false,\n  } = props\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const wrapRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (canvasRef.current && wrapRef.current) {\n      setCanvasSize(canvasRef.current, wrapRef.current)\n\n      const ctx = canvasRef.current.getContext('2d')\n      if (ctx) {\n        motionLogic(ctx, {\n          elementsNum,\n          colors,\n          canvas: canvasRef.current,\n        })\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    const e = new CustomEvent('partyPopperStart', {\n      detail: start,\n    })\n    document.dispatchEvent(e)\n  }, [start])\n\n  return (\n    <div style={defaultStyle} ref={wrapRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  )\n}\n\nexport default PartyPopper\n","/* eslint-disable react/button-has-type */\nimport React, { useState } from 'react'\nimport PartyPopper from './Component'\n\nfunction index() {\n  const [start, setStart] = useState(false)\n\n  return (\n    <div\n      style={{\n        width: '100vw',\n        height: '100vh',\n        backgroundColor: '#333',\n        position: 'absolute',\n        top: '0',\n        left: '0',\n      }}\n    >\n      <PartyPopper elementsNum={100} start={start} />\n      <button\n        style={{\n          position: 'absolute',\n          top: '24px',\n          right: '24px',\n        }}\n        onClick={() => {\n          setStart(true)\n        }}\n      >\n        start\n      </button>\n\n      <button\n        style={{\n          position: 'absolute',\n          top: '72px',\n          right: '24px',\n        }}\n        onClick={() => {\n          setStart(false)\n        }}\n      >\n        stop\n      </button>\n    </div>\n  )\n}\n\nexport default index\n"],"names":["Parallelogram","color","_classCallCheck","x","y","radius","vx","vy","rotation","scaleX","scaleY","boundary","this","_createClass","key","value","context","save","translate","rotate","scale","fillStyle","beginPath","moveTo","lineTo","closePath","fill","restore","elements","ctx","options","elementsNum","colors","canvas","then","start","drawFrame","time","timeInSeconds","deltaTime","clearRect","width","height","i","length","Math","random","PI","draw","splice","window","requestAnimationFrame","document","addEventListener","e","detail","element","push","initElements","defaultStyle","position","top","left","pointerEvents","props","_props$elementsNum","_props$colors","_props$start","canvasRef","useRef","wrapRef","useEffect","current","wrap","wrapRect","getBoundingClientRect","setCanvasSize","getContext","motionLogic","CustomEvent","dispatchEvent","_jsx","style","ref","children","_useState","useState","_useState2","_slicedToArray","setStart","_jsxs","backgroundColor","PartyPopper","right","onClick"],"sourceRoot":""}