{"version":3,"file":"static/js/985.d065bd7b.chunk.js","mappings":"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","sources":["webpack://demos/./src/FerrisWheel/index.module.css?5291","FerrisWheel/utils/degree2Radian.ts","FerrisWheel/utils/getPos.ts","FerrisWheel/utils/WheelAndRoomsRotate.ts","FerrisWheel/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FerrisWheel_container__XxQ8n\",\"ferris\":\"FerrisWheel_ferris__DN9zv\",\"wheel\":\"FerrisWheel_wheel__LZcpm\",\"roomsArea\":\"FerrisWheel_roomsArea__-DTtx\",\"room\":\"FerrisWheel_room__6okD+\",\"bottom\":\"FerrisWheel_bottom__nbg20\"};","/**\n * 角度转为弧度\n * @param radius 角度\n * @returns 弧度\n */\nconst getRadian = (radius: number) => (radius * Math.PI) / 180\n\nexport default getRadian\n","import degree2Radian from './degree2Radian'\n\n/**\n * 获取位置\n * @param r 半径\n * @param count 个数\n */\nconst getPos = (r: number, count: number) => {\n  const angleRadian = degree2Radian(360 / count)\n  const res: Array<{\n    x: number\n    y: number\n  }> = []\n  for (let i = 0; i < count; i += 1) {\n    res.push({\n      x: r * Math.cos(angleRadian * i),\n      y: r * Math.sin(angleRadian * i),\n    })\n  }\n  return res\n}\n\nexport default getPos\n","import anime from 'animejs'\n\nexport default class WheelAndRoomsRotate {\n  wheelDom: HTMLElement\n\n  roomsDoms: NodeListOf<Element>\n\n  timeline: anime.AnimeTimelineInstance | undefined\n\n  constructor(wheelDom: HTMLElement, roomsDoms: NodeListOf<Element>, autoPlay = false) {\n    this.wheelDom = wheelDom\n    this.roomsDoms = roomsDoms\n    this.initTimeLine(autoPlay)\n  }\n\n  private initTimeLine(autoPlay: boolean) {\n    this.timeline = anime.timeline({\n      easing: 'linear',\n      duration: 8000,\n      loop: true,\n      autoplay: autoPlay,\n    })\n    this.timeline\n      .add({\n        targets: this.wheelDom,\n        rotate: 360,\n      })\n      .add(\n        {\n          targets: this.roomsDoms,\n          rotate: -360,\n        },\n        0,\n      )\n  }\n\n  play() {\n    this.timeline?.play()\n  }\n\n  stop() {\n    this.timeline?.pause()\n  }\n\n  reset() {\n    anime.remove(this.wheelDom)\n    anime.remove(this.roomsDoms)\n    anime.set(this.roomsDoms, {\n      rotate: 0,\n    })\n    anime.set(this.wheelDom, {\n      rotate: 0,\n    })\n  }\n\n  restart(roomsDoms: NodeListOf<Element>) {\n    this.roomsDoms = roomsDoms\n    this.reset()\n    this.initTimeLine(true)\n  }\n\n  reverse() {\n    this.timeline?.reverse()\n  }\n}\n","/* eslint-disable react/no-array-index-key */\nimport React, {\n  useEffect, useRef, useState, memo,\n} from 'react'\nimport GUI from 'lil-gui'\nimport styles from './index.module.css'\nimport getPos from './utils/getPos'\nimport WheelAndRoomsRotate from './utils/WheelAndRoomsRotate'\n\n/**\n * 摩天轮\n */\nfunction FerrisWheel() {\n  const guiObj = {\n    count: 8,\n    start: () => { },\n    stop: () => { },\n    restart: () => { },\n    reverse: () => { },\n  }\n\n  const wheelDomRef = useRef<HTMLDivElement>(null)\n  const animationRef = useRef<WheelAndRoomsRotate>()\n  const [count, setCount] = useState(guiObj.count)\n\n  useEffect(() => {\n    const gui = new GUI()\n\n    if (wheelDomRef.current) {\n      animationRef.current = new WheelAndRoomsRotate(\n        wheelDomRef.current,\n        wheelDomRef.current?.querySelectorAll('.wheelRooms'),\n        false,\n      )\n\n      gui.add(guiObj, 'count', 6, 16, 1).onFinishChange((e: number) => {\n        setCount(e)\n      })\n      guiObj.start = () => {\n        animationRef.current?.play()\n      }\n      guiObj.stop = () => {\n        animationRef.current?.stop()\n      }\n      guiObj.reverse = () => {\n        animationRef.current?.reverse()\n      }\n      gui.add(guiObj, 'start')\n      gui.add(guiObj, 'stop')\n      gui.add(guiObj, 'reverse')\n    }\n    return () => {\n      gui.destroy()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (wheelDomRef.current) {\n      animationRef.current?.restart(wheelDomRef.current.querySelectorAll('.wheelRooms'))\n    }\n  }, [count])\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.ferris}>\n        <div className={styles.wheel} ref={wheelDomRef}>\n          <div className={styles.roomsArea}>\n            {\n              getPos(202 / 2, count).map((item, index) => (\n                <div\n                  key={index}\n                  className={`${styles.room} wheelRooms`}\n                  style={{\n                    top: `${item.y}px`,\n                    left: `${item.x - 20}px`,\n                  }}\n                />\n              ))\n            }\n          </div>\n        </div>\n        <div className={styles.bottom} />\n      </div>\n    </div>\n  )\n}\n\nexport default memo(FerrisWheel)\n"],"names":["radius","Math","PI","r","count","angleRadian","degree2Radian","res","i","push","x","cos","y","sin","WheelAndRoomsRotate","wheelDom","roomsDoms","autoPlay","timeline","this","initTimeLine","anime","easing","duration","loop","autoplay","add","targets","rotate","play","pause","reset","reverse","FerrisWheel","guiObj","start","stop","restart","wheelDomRef","useRef","animationRef","useState","setCount","useEffect","gui","GUI","current","querySelectorAll","onFinishChange","e","destroy","className","styles","ref","getPos","map","item","index","style","top","left","memo"],"sourceRoot":""}